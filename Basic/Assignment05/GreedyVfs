NodeList = {'S': 10, 'A': 9, 'B': 7, 'C': 8, 'D': 8, 'H': 6, 'L': 6, 'F': 6, 'G': 3, 'I': 4,
            'J': 4, 'E': 0, 'K': 3}
SuccList = {'S': [['A', 9], ['B', 7], ['C', 8]], 'A': [['D', 8], ['B', 7]], 'B': [['D', 8], ['H', 6]], 'C': [['L', 6]],
            'D': [['F', 6]], 'H': [['F', 6], ['G', 3]], 'L': [['I', 4], ['J', 4]], 'G': [['E', 0]], 'I': [['K', 3]],
            'J': [['K', 3]],
            'K': [['E', 0]]}
Start, Goal = 'S', 'E'
Closed = list()
SUCCESS = True
FAILURE = False
State = FAILURE


def GOALTEST(N):
    if N == Goal:
        return True
    else:
        return False


def MOVEGEN(N):
    New_list = list()
    if N in SuccList.keys():
        New_list = SuccList[N]

    return New_list


def APPEND(L1, L2):
    New_list = list(L1) + list(L2)
    return New_list


def SORT(L):
    L.sort(key=lambda x: x[1])
    return L


def BestFirstSearch():
    S = 0
    if Start in NodeList.keys():
        S = NodeList[Start]
    OPEN = [[Start, S]]
    CLOSED = list()
    global State
    global Closed
    while (len(OPEN) != 0) and (State != SUCCESS):
        print("------------")
        N = OPEN[0]
        print("N=", N)
        del OPEN[0]  # delete the node we picked

        if GOALTEST(N[0]) == True:
            State = SUCCESS
            CLOSED = APPEND(CLOSED, [N])
            print("CLOSED=", CLOSED)
        else:
            CLOSED = APPEND(CLOSED, [N])
            print("CLOSED=", CLOSED)
            CHILD = MOVEGEN(N[0])
            print("CHILD=", CHILD)
            for val in OPEN:
                if val in CHILD:             CHILD.remove(val)
            for val in CLOSED:
                if val in CHILD:           CHILD.remove(val)
            OPEN = APPEND(CHILD, OPEN)  # append movegen elements to OPEN
            print("Unsorted OPEN=", OPEN)
            SORT(OPEN)
            print("Sorted OPEN=", OPEN)
    Closed = CLOSED
    return State